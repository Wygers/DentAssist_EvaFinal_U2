@model DentAssist.Models.Paciente

@{
    ViewData["Title"] = "Registrar Nuevo Paciente";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - DentAssist</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

    <style>
        .required-field::after {
            content: " *";
            color: #dc3545;
        }
        .form-floating > .form-control:not(:placeholder-shown) ~ label {
            opacity: .8;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="bi bi-check-circle-fill me-2"></i> @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-triangle-fill me-2"></i> @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h2 class="mb-0"><i class="bi bi-person-plus me-2"></i> Registrar Nuevo Paciente</h2>
            </div>

            <div class="card-body">
                @using (Html.BeginForm("Create", "Pacientes", FormMethod.Post, new { @class = "row g-3 needs-validation", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", placeholder = "Nombre completo", maxlength = "100", required = "required" })
                            <label for="Nombre" class="required-field">Nombre Completo</label>
                            @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            @Html.TextBoxFor(m => m.Rut, new { @class = "form-control", placeholder = "RUT", maxlength = "12", required = "required" })
                            <label for="Rut" class="required-field">RUT</label>
                            @Html.ValidationMessageFor(m => m.Rut, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            @Html.TextBoxFor(m => m.Telefono, new { @class = "form-control", placeholder = "Teléfono", maxlength = "20", required = "required" })
                            <label for="Telefono" class="required-field">Teléfono</label>
                            @Html.ValidationMessageFor(m => m.Telefono, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating mb-3">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email", maxlength = "100", type = "email" })
                            <label for="Email">Email</label>
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-12">
                        <div class="form-floating mb-3">
                            @Html.TextBoxFor(m => m.Direccion, new { @class = "form-control", placeholder = "Dirección", maxlength = "200" })
                            <label for="Direccion">Dirección</label>
                            @Html.ValidationMessageFor(m => m.Direccion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-12">
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <button type="submit" class="btn btn-primary me-md-2">
                                <i class="bi bi-save me-2"></i>Registrar Paciente
                            </button>
                            <a href="@Url.Action("Index", "Pacientes")" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left me-2"></i>Volver al Listado
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

    <script>
        (() => {
            'use strict';
            const forms = document.querySelectorAll('.needs-validation');
            Array.from(forms).forEach(form => {
                form.addEventListener('submit', event => {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
</body>
</html>
